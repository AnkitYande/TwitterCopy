{"version":3,"sources":["components/Navbar.js","components/Login.js","components/SignUp.js","components/TweetCell.js","components/TweetList.js","components/CreateTweet.js","components/MainPage.js","components/Profile.js","components/Liked.js","components/Following.js","components/Search.js","components/Modal.js","App.js","index.js"],"names":["Navbar","className","to","style","cursor","fontSize","marginRight","icon","faHome","onClick","this","likeTweet","props","user","faSignInAlt","faUser","faHeart","toggleOpen","margin","Component","Login","state","username","password","valid","onChangeU","e","setState","target","value","onChangeP","onSubmit","preventDefault","verifyUser","a","pkg","console","log","axios","post","then","res","data","alert","updateUser","type","name","placeholder","onChange","SignUp","checkUser","length","get","response","addUser","catch","error","newUser","role","setTimeout","TweetCell","liked","id","like","tweetID","put","updateTweets","forceUpdate","date","substring","message","color","TweetList","likedTweets","getTweets","getLiked","includes","tweets","slice","reverse","map","tweet","_id","updatedAt","CreateTweet","newTweet","autoComplete","form","MainPage","Profile","numLikes","getUser","refresh","logout","opacity","Liked","tweet_ID_List","getTweetIDs","forEach","Following","tweetsList","Search","MODAL_STYLES","position","top","left","transform","backgroundColor","padding","zIndex","borderRadius","OVERLAY_STYLES","right","bottom","Modal","open","onClose","faTimes","App","uid","fontWeight","path","exact","render","ReactDOM","StrictMode","document","getElementById"],"mappings":"wSA0CeA,EArCf,uKAEc,IAAD,OACL,OACI,yBAAKC,UAAU,WACX,kBAAC,IAAD,CAAMC,GAAG,KACL,kBAAC,IAAD,CAAiBC,MAAO,CAAEC,OAAQ,UAAWC,SAAU,SAAUC,YAAa,IAAMC,KAAMC,IAAQC,QAASC,KAAKC,YADpH,QAIoB,MAAnBD,KAAKE,MAAMC,KACR,kBAAC,IAAD,CAAMX,GAAG,UACL,kBAAC,IAAD,CAAiBC,MAAO,CAAEC,OAAQ,UAAWC,SAAU,SAAUC,YAAa,IAAMC,KAAMO,IAAaL,QAASC,KAAKC,YADzH,SAKA,kBAAC,IAAD,CAAMT,GAAG,YACL,kBAAC,IAAD,CAAiBC,MAAO,CAAEC,OAAQ,UAAWC,SAAU,SAAUC,YAAa,IAAMC,KAAMQ,IAAQN,QAASC,KAAKC,YADpH,WAMJ,kBAAC,IAAD,CAAMT,GAAG,UACL,kBAAC,IAAD,CAAiBC,MAAO,CAAEC,OAAQ,UAAWC,SAAU,SAAUC,YAAa,IAAMC,KAAMS,IAASP,QAASC,KAAKC,YADrH,SAOA,uBAAGF,QAAS,WAAO,EAAKG,MAAMK,eAC1B,4BAAQhB,UAAU,MAAME,MAAO,CAAEe,OAAQ,IAAzC,eA7BpB,GAA4BC,a,wCC6EbC,EA9Ef,4MACIC,MAAQ,CACJC,SAAU,GACVC,SAAU,GACVV,KAAM,KACNW,OAAO,GALf,EAQIC,UAAY,SAACC,GAAD,OAAO,EAAKC,SAAS,CAACL,SAAUI,EAAEE,OAAOC,SARzD,EASIC,UAAY,SAACJ,GAAD,OAAO,EAAKC,SAAS,CAACJ,SAAUG,EAAEE,OAAOC,SATzD,EAWIE,SAAW,SAACL,GACRA,EAAEM,iBAEF,EAAKC,cAdb,EAiBIA,WAjBJ,sBAiBiB,4BAAAC,EAAA,6DACHC,EAAM,CACR,SAAa,EAAKd,MAAMC,SACxB,SAAa,EAAKD,MAAME,UAE5Ba,QAAQC,IAAIF,GALH,SAMHG,IAAMC,KAAK,qCAAsCJ,GAClDK,MAAK,SAAAC,GACqB,iBAAbA,EAAIC,KACVC,MAAMF,EAAIC,OAEV,EAAKf,SAAS,CAACd,KAAM4B,EAAIC,OACzB,EAAK9B,MAAMgC,WAAW,EAAKvB,MAAMC,UACjC,EAAKK,SAAS,CAACH,OAAO,QAbzB,2CAjBjB,uDAqCQ,OAAId,KAAKW,MAAMR,MACXH,KAAKiB,SAAS,CAACH,OAAO,IACf,kBAAC,IAAD,CAAUtB,GAAI,OAGrB,yBAAKD,UAAY,YACjB,0BAAM8B,SAAYrB,KAAKqB,UACnB,2BACIc,KAAO,OACPC,KAAO,WACPC,YAAc,WACdlB,MAASnB,KAAKW,MAAMC,SACpB0B,SAAYtC,KAAKe,UACjBxB,UAAY,cAGhB,6BACA,2BACI4C,KAAO,WACPC,KAAO,WACPC,YAAc,WACdlB,MAASnB,KAAKW,MAAME,SACpByB,SAAYtC,KAAKoB,UACjB7B,UAAY,cAGhB,6BACA,2BACI4C,KAAO,SACPhB,MAAQ,QACR5B,UAAY,SAGpB,6BACA,kBAAC,IAAD,CAAMC,GAAG,WAAT,gBAvEZ,GAA2BiB,aC2FZ8B,EA3Ff,4MAEI5B,MAAQ,CACJC,SAAU,GACVC,SAAU,GACVC,OAAO,GALf,EAQIC,UAAY,SAACC,GAAD,OAAO,EAAKC,SAAS,CAACL,SAAUI,EAAEE,OAAOC,SARzD,EASIC,UAAY,SAACJ,GAAD,OAAO,EAAKC,SAAS,CAACJ,SAAUG,EAAEE,OAAOC,SATzD,EAWIE,SAAW,SAACL,GACRA,EAAEM,iBACF,EAAKkB,aAbb,EAgBIA,UAhBJ,sBAgBgB,sBAAAhB,EAAA,2DACL,EAAKb,MAAMC,SAAS6B,OAAS,GADxB,gBAC2BR,MAAM,uBADjC,4BAEA,EAAKtB,MAAME,SAAS4B,OAAS,GAF7B,gBAEgCR,MAAM,uBAFtC,wCAIEL,IAAMc,IAAI,mCAAmC,EAAK/B,MAAMC,UAC7DkB,MAAK,SAAAa,GACkB,MAAjBA,EAASX,KAAcC,MAAM,mBAC3B,EAAKW,aAEbC,OAAM,SAACC,GACJpB,QAAQC,IAAImB,MAVZ,4CAhBhB,EA8BIF,QA9BJ,sBA8Bc,4BAAApB,EAAA,6DACAuB,EAAU,CACZnC,SAAW,EAAKD,MAAMC,SACtBC,SAAW,EAAKF,MAAME,SACtBmC,KAAM,QAJJ,SAOApB,IAAMC,KAAK,kCAAmCkB,GACjDjB,MAAK,SAAAa,GACJ,EAAK1B,SAAS,CAACd,KAAMwC,EAASX,MAAO,EAAKT,YAC1CG,QAAQC,IAAI,EAAKhB,MAAMR,SAExB0C,OAAM,SAACC,GACNpB,QAAQC,IAAImB,MAbV,OAeJ,EAAK5C,MAAMgC,WAAW,EAAKvB,MAAMC,UACjCqC,WAAW,KACX,EAAKhC,SAAS,CAACH,OAAO,IAjBlB,2CA9Bd,uDAmDQ,OAAId,KAAKW,MAAMG,OACXd,KAAKiB,SAAS,CAACH,OAAO,IACf,kBAAC,IAAD,CAAUtB,GAAI,OAGrB,yBAAKD,UAAY,YACjB,0BAAM8B,SAAYrB,KAAKqB,UACnB,2BACIc,KAAO,OACPC,KAAO,WACPC,YAAc,WACdlB,MAASnB,KAAKW,MAAMC,SACpB0B,SAAYtC,KAAKe,UACjBxB,UAAY,cAGhB,6BACA,2BACI4C,KAAO,WACPC,KAAO,WACPC,YAAc,WACdlB,MAASnB,KAAKW,MAAME,SACpByB,SAAYtC,KAAKoB,UACjB7B,UAAY,cAGhB,6BACA,2BACI4C,KAAO,SACPhB,MAAQ,UACR5B,UAAY,SAGpB,6BACA,kBAAC,IAAD,CAAMC,GAAG,UAAT,cArFZ,GAA4BiB,aCgDbyC,EA/Cf,4MAEIjD,UAFJ,sBAEgB,8BAAAuB,EAAA,yDACH,EAAKtB,MAAMC,KADR,uBAEJ8B,MAAM,iCAFF,6BAMH,EAAK/B,MAAMiD,MANR,wBAOJzB,QAAQC,IAAI,EAAKzB,MAAMC,KAAO,UAAY,EAAKD,MAAMkD,IAC/CC,EAAO,CACTzC,SAAU,EAAKV,MAAMC,KACrBmD,QAAS,EAAKpD,MAAMkD,IAVpB,SAYExB,IAAM2B,IAAI,mCAAoCF,GAZhD,sCAeJ3B,QAAQC,IAAI,EAAKzB,MAAMC,KAAO,YAAc,EAAKD,MAAMkD,IACjDC,EAAO,CACTzC,SAAU,EAAKV,MAAMC,KACrBmD,QAAS,EAAKpD,MAAMkD,IAExB1B,QAAQC,IAAI0B,GApBR,UAqBEzB,IAAM2B,IAAI,qCAAsCF,GArBlD,QA0BR,EAAKnD,MAAMsD,eACX,EAAKC,cA3BG,4CAFhB,uDAiCQ,OACI,yBAAKlE,UAAU,cACX,2BAAG,2BAAIS,KAAKE,MAAMU,UAAlB,IAAiCZ,KAAKE,MAAMwD,KAAKC,UAAU,EAAG,IAA9D,KACA,2BAAI3D,KAAKE,MAAM0D,SACb5D,KAAKE,MAAMiD,MAGT,kBAAC,IAAD,CAAiB5D,UAAU,WAAWE,MAAO,CAAEC,OAAQ,UAAWC,SAAU,OAAQC,YAAa,GAAIiE,MAAO,oBAAsBhE,KAAMS,IAASP,QAASC,KAAKC,YAF/J,kBAAC,IAAD,CAAiBV,UAAU,WAAWE,MAAO,CAAEC,OAAQ,UAAWC,SAAU,OAAQC,YAAa,IAAMC,KAAMS,IAASP,QAASC,KAAKC,iBAtCxJ,GAA+BQ,aCuDhBqD,EAxDf,4MAEInD,MAAQ,CACJoD,YAAa,IAHrB,EAUIC,UAVJ,sBAUgB,sBAAAxC,EAAA,yDAEH,EAAKtB,MAAMC,KAFR,iEAKFyB,IAAMc,IAAI,mCAAqC,EAAKxC,MAAMC,MAC3D2B,MAAK,SAAAC,GACF,EAAKd,SAAS,CAAE8C,YAAahC,EAAIC,KAAK+B,iBAPtC,iCASD,GATC,2CAVhB,EAsBIE,SAAW,SAACb,GACR,SAAI,EAAKzC,MAAMoD,cACP,EAAKpD,MAAMoD,YAAYG,SAASd,KAxBhD,EA8BII,aA9BJ,sBA8BmB,sBAAAhC,EAAA,sDACX,EAAKtB,MAAMgC,WAAW,EAAKhC,MAAMC,MACjC,EAAKD,MAAMsD,eACX9B,QAAQC,IAAI,mBACZ,EAAKqC,YAJM,2CA9BnB,kEAOQhE,KAAKgE,cAPb,+BAqCc,IAAD,OAEL,OAAOhE,KAAKE,MAAMiE,OAAOC,MAAM,GAAGC,UAAUC,KAAI,SAACC,GAAD,OAC5C,kBAAC,EAAD,CACI3D,SAAU2D,EAAM3D,SAChBgD,QAASW,EAAMX,QACfR,GAAImB,EAAMC,IACVd,KAAMa,EAAME,UACZtE,KAAM,EAAKD,MAAMC,KACjBgD,MAAO,EAAKc,SAASM,EAAMC,KAC3BtC,WAAY,EAAKhC,MAAMgC,WACvBsB,aAAc,EAAKA,sBAhDnC,GAA+B/C,aCkDhBiE,EAnDf,4MAEI/D,MAAQ,CACJ4D,MAAO,IAHf,EAMIjC,SAAW,SAACtB,GAAD,OAAO,EAAKC,SAAS,CAAEsD,MAAOvD,EAAEE,OAAOC,SANtD,EAQIE,SARJ,uCAQe,WAAOL,GAAP,eAAAQ,EAAA,yDACPR,EAAEM,iBACqB,MAAnB,EAAKpB,MAAMC,KAFR,gBAGH8B,MAAM,mBAHH,8BAKHP,QAAQC,IAAI,EAAKhB,MAAM4D,OACjBI,EAAW,CACb/D,SAAU,EAAKV,MAAMC,KACrByD,QAAS,EAAKjD,MAAM4D,OARrB,SAUG3C,IAAMC,KAAK,mCAAoC8C,GAChD7C,MAAK,SAAAC,GAAG,OAAIL,QAAQC,IAAII,EAAIC,SAX9B,OAaH,EAAKf,SAAS,CAAEsD,MAAO,KACvB,EAAKrE,MAAMsD,eAdR,4CARf,6GA2BQ,OACI,0BAAMJ,GAAG,YAAY7D,UAAU,YAAY8B,SAAUrB,KAAKqB,UACtD,8BACIc,KAAK,WACLC,KAAK,QACLwC,aAAa,MACbvC,YAAY,oBACZlB,MAAOnB,KAAKW,MAAM4D,MAClBjC,SAAUtC,KAAKsC,SACfuC,KAAK,YACLtF,UAAU,aAGd,2BACI4C,KAAK,SACLhB,MAAM,QACN5B,UAAU,aA3C9B,GAAiCkB,aC4ClBqE,EA1Cf,4MAEInE,MAAQ,CACJwD,OAAQ,IAHhB,EAMIH,UANJ,sBAMgB,sBAAAxC,EAAA,6DACRE,QAAQC,IAAI,kBADJ,SAEFC,IAAMc,IAAI,iCACXZ,MAAK,SAAAa,GACF,EAAK1B,SAAS,CAAEkD,OAAQxB,EAASX,UAEpCa,OAAM,SAACC,GACJpB,QAAQC,IAAImB,MAPZ,2CANhB,kEAkBQ9C,KAAKgE,cAlBb,+BAsBQ,OACI,yBAAKzE,UAAU,YACX,yBAAKA,UAAU,cACX,kBAAC,EAAD,CAAaY,KAAMH,KAAKE,MAAMC,KAAMqD,aAAcxD,KAAKgE,YACzB,IAA7BhE,KAAKW,MAAMwD,OAAO1B,OACf,iDAEA,kBAAC,EAAD,CACI0B,OAAQnE,KAAKW,MAAMwD,OACnBhE,KAAMH,KAAKE,MAAMC,KACjBqD,aAAcxD,KAAKgE,UACnB9B,WAAYlC,KAAKE,MAAMgC,mBAjCnD,GAA8BzB,aCqEfsE,EAtEf,4MACIpE,MAAQ,CACJwD,OAAQ,GACRa,SAAU,GAHlB,EAMIhB,UANJ,sBAMgB,sBAAAxC,EAAA,sEACFI,IAAMc,IAAI,oCAAsC,EAAKxC,MAAMC,MAC5D2B,MAAK,SAAAa,GACF,EAAK1B,SAAS,CAAEkD,OAAQxB,EAASX,UAEpCa,OAAM,SAACC,GACJpB,QAAQC,IAAImB,MANZ,2CANhB,EAgBImC,QAhBJ,sBAgBc,sBAAAzD,EAAA,sEACAI,IAAMc,IAAI,mCAAqC,EAAKxC,MAAMC,MAC3D2B,MAAK,SAAAa,GACF,EAAK1B,SAAS,CAAE+D,SAAUrC,EAASX,KAAK+B,YAAYtB,YAEvDI,OAAM,SAACC,GACJpB,QAAQC,IAAImB,MANd,2CAhBd,EA+BIoC,QAAU,WACN,EAAKlB,YACL,EAAKA,aAjCb,EAoCImB,OAAS,WACLzD,QAAQC,IAAI,eACZC,IAAMc,IAAI,sCACV,EAAKxC,MAAMgC,WAAW,OAvC9B,kEA2BQlC,KAAKgE,YACLhE,KAAKiF,YA5Bb,+BA2CQ,OACI,yBAAK1F,UAAU,YACVS,KAAKE,MAAMC,KACR,6BACI,yBAAKZ,UAAU,cACX,yBAAKA,UAAU,OACX,gCAAMS,KAAKE,MAAMC,MACjB,wBAAIV,MAAO,CAAE2F,QAAS,QAAtB,YAAyCpF,KAAKW,MAAMwD,OAAO1B,OAA3D,KACA,wBAAIhD,MAAO,CAAE2F,QAAS,QAAtB,WAAwCpF,KAAKW,MAAMqE,SAAnD,KACA,4BAAQzF,UAAU,MAAME,MAAO,CAAEe,OAAQ,GAAKT,QAASC,KAAKmF,QAA5D,aAEJ,kBAAC,EAAD,CACIhB,OAAQnE,KAAKW,MAAMwD,OACnBhE,KAAMH,KAAKE,MAAMC,KACjBqD,aAAcxD,KAAKgE,UACnB9B,WAAYlC,KAAKE,MAAMgC,eAKnC,gDA/DpB,GAA6BzB,a,QCwDd4E,EAxDf,4MAGI1E,MAAQ,CACJ2E,cAAe,GACfnB,OAAQ,IALhB,EAQIoB,YAAc,WACV3D,IAAMc,IAAI,mCAAqC,EAAKxC,MAAMC,MACrD2B,MAAK,SAAAa,GACF,EAAK1B,SAAS,CAAEqE,cAAe3C,EAASX,KAAK+B,aAAe,EAAKC,cAEpEnB,OAAM,SAACC,GACJpB,QAAQC,IAAImB,OAd5B,EAkBIkB,UAAY,WACR,EAAKrD,MAAM2E,cAAcE,SAAQ,SAAAjB,GAC7B7C,QAAQC,IAAI,kBAAoB4C,GAChC3C,IAAMc,IAAI,gCAAkC6B,GACvCzC,MAAK,SAAAa,GACF,EAAK1B,SAAS,CAAEkD,OAAO,GAAD,mBAAM,EAAKxD,MAAMwD,QAAjB,CAAyBxB,EAASX,YAE3Da,OAAM,SAACC,GACJpB,QAAQC,IAAImB,UA1BhC,kEAiCQ9C,KAAKuF,gBAjCb,+BAqCQ,OAEI,yBAAKhG,UAAU,YACTS,KAAKE,MAAMC,KAGT,yBAAKZ,UAAU,cACX,kBAAC,EAAD,CACI4E,OAAQnE,KAAKW,MAAMwD,OACnBhE,KAAMH,KAAKE,MAAMC,KACjBqD,aAAcxD,KAAKuF,YACnBrD,WAAYlC,KAAKE,MAAMgC,cAP/B,4EAzCpB,GAA2BzB,aCaZgF,EAff,4MACI9E,MAAQ,CACJ+E,WAAW,GACXvB,OAAO,IAHf,uDAMQ,OACiC,IAA7BnE,KAAKW,MAAMwD,OAAO1B,OAAe,yBAAKlD,UAAU,YAAf,oCACjC,yBAAKA,UAAU,YAAf,sBARZ,GAA+BkB,aCUhBkF,EAVf,uKAEQ,OACI,yBAAKpG,UAAU,YAAf,mBAHZ,GAA4BkB,aCGtBmF,EAAe,CACnBC,SAAU,QACVC,IAAK,MACLC,KAAM,MACNC,UAAW,wBACXC,gBAAiB,UACjBC,QAAS,OACTC,OAAQ,IACRC,aAAc,IAGVC,EAAiB,CACrBR,SAAU,QACVC,IAAK,EACLC,KAAM,EACNO,MAAO,EACPC,OAAQ,EACRN,gBAAiB,0BACjBE,OAAQ,KAGK,SAASK,EAAT,GAAyC,IAAxBC,EAAuB,EAAvBA,KAAMC,EAAiB,EAAjBA,QAASvG,EAAQ,EAARA,KAC7C,IAAKsG,EAAM,OAAO,KAMlB,OACE,oCACE,yBAAKhH,MAAO4G,IACZ,yBAAK5G,MAAOmG,GACV,yBAAKrG,UAAU,aACb,kBAAC,IAAD,CAAiBE,MAAS,CAACoE,MAAO,WAAYhE,KAAM8G,IAAS5G,QAAS2G,KAExE,yBAAKnH,UAAU,cACb,kBAAC,EAAD,CAAaY,KAAMA,EAAMqD,aAZf,WAChBkD,U,ICqDWE,E,4MAnEbjG,MAAQ,CACNR,KAAM,KACNsG,MAAM,G,EAGRvE,WAAa,SAAC2E,GACZ,EAAK5F,SAAS,CAAEd,KAAM0G,IACtBnF,QAAQC,IAAI,iBAAmBkF,I,EAGjCtG,WAAa,WACX,EAAKU,SAAS,CAAEwF,MAAM,K,uDAGd,IAAD,OACP,OACE,kBAAC,IAAD,KACE,yBAAKlH,UAAU,OACb,6BACA,yBAAKA,UAAU,WAAWE,MAAO,CAAEE,SAAU,SAAUmH,WAAY,SAAnE,kBAEE,kBAACN,EAAD,CACEC,KAAMzG,KAAKW,MAAM8F,KACjBC,QAAU,WAAO,EAAKzF,SAAS,CAAEwF,MAAM,KACvCtG,KAAMH,KAAKW,MAAMR,MAHnB,SAQF,yBAAKZ,UAAU,aAEb,kBAAC,EAAD,CAAQgB,WAAYP,KAAKO,WAAYJ,KAAMH,KAAKW,MAAMR,OAGtD,kBAAC,IAAD,CAAO4G,KAAK,IAAIC,OAAK,EACnBC,OAAQ,SAAC/G,GAAD,OAAY,kBAAC,EAAD,CAAUC,KAAM,EAAKQ,MAAMR,KAAM+B,WAAY,EAAKA,gBAExE,kBAAC,IAAD,CAAO6E,KAAK,WAAWC,OAAK,EAC1BC,OAAQ,SAAC/G,GAAD,OAAY,kBAAC,EAAD,CAASC,KAAM,EAAKQ,MAAMR,KAAM+B,WAAY,EAAKA,gBAEvE,kBAAC,IAAD,CAAO6E,KAAK,SAASC,OAAK,EACxBC,OAAQ,SAAC/G,GAAD,OAAY,kBAAC,EAAD,CAAOC,KAAM,EAAKQ,MAAMR,KAAM+B,WAAY,EAAKA,gBAErE,kBAAC,IAAD,CAAO6E,KAAK,aAAaC,OAAK,EAC5BC,OAAQ,SAAC/G,GAAD,OAAY,kBAAC,EAAD,CAAWC,KAAM,EAAKQ,MAAMR,UAElD,kBAAC,IAAD,CAAO4G,KAAK,UAAUC,OAAK,EACzBC,OAAQ,SAAC/G,GAAD,OAAY,kBAAC,EAAD,CAAQC,KAAM,EAAKQ,MAAMR,UAE/C,kBAAC,IAAD,CAAO4G,KAAK,SACVE,OAAQ,SAAC/G,GAAD,OAAY,kBAAC,EAAD,CAAOgC,WAAY,EAAKA,gBAE9C,kBAAC,IAAD,CAAO6E,KAAK,UACVE,OAAQ,SAAC/G,GAAD,OAAY,kBAAC,EAAD,CAAQgC,WAAY,EAAKA,uB,GAvDzCzB,aCTlByG,IAASD,OACP,kBAAC,IAAME,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.d8b21d18.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport { Link } from 'react-router-dom';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faHeart, faSignInAlt, faHome, faUser } from \"@fortawesome/free-solid-svg-icons\";\n\nexport class Navbar extends Component {\n\n    render() {\n        return (\n            <div className=\"sidenav\">\n                <Link to=\"/\">\n                    <FontAwesomeIcon style={{ cursor: \"pointer\", fontSize: \"1.5rem\", marginRight: 10 }} icon={faHome} onClick={this.likeTweet} />\n                    Home\n                </Link>\n                {this.props.user == null ?\n                    <Link to=\"/login\">\n                        <FontAwesomeIcon style={{ cursor: \"pointer\", fontSize: \"1.5rem\", marginRight: 10 }} icon={faSignInAlt} onClick={this.likeTweet} />\n                        Login\n                    </Link>\n                    :\n                    <Link to=\"/profile\">\n                        <FontAwesomeIcon style={{ cursor: \"pointer\", fontSize: \"1.5rem\", marginRight: 10 }} icon={faUser} onClick={this.likeTweet} />\n                        Profile\n                    </Link>\n                }\n\n                <Link to=\"/Liked\">\n                    <FontAwesomeIcon style={{ cursor: \"pointer\", fontSize: \"1.5rem\", marginRight: 10 }} icon={faHeart} onClick={this.likeTweet} />\n                    Likes\n                </Link>\n                {/* <Link to=\"/Following\">Following</Link> */}\n                {/* <Link to=\"/Search\">Search</Link> */}\n                \n                <a onClick={() => {this.props.toggleOpen()}}>\n                    <button className=\"btn\" style={{ margin: 0 }}>Tweet</button>\n                </a>\n\n            </div>\n        )\n    }\n}\n\nexport default Navbar\n","import React, { Component } from 'react'\nimport axios from 'axios' \nimport { Redirect, Link } from \"react-router-dom\";\n\nexport class Login extends Component {\n    state = {\n        username: '',\n        password: '',\n        user: null,\n        valid: false\n    }\n\n    onChangeU = (e) => this.setState({username: e.target.value});\n    onChangeP = (e) => this.setState({password: e.target.value});\n\n    onSubmit = (e) =>{\n        e.preventDefault();\n        // axios.get('http://localhost:5000/users/login/'+this.state.username)\n        this.verifyUser();\n    }\n\n    verifyUser = async () => {\n        const pkg = {\n            \"username\" : this.state.username,\n            \"password\" : this.state.password,\n        }\n        console.log(pkg);\n        await axios.post('http://localhost:5000/users/verify', pkg)\n            .then(res => {\n                if(typeof(res.data) == \"string\")\n                    alert(res.data);\n                else{\n                    this.setState({user: res.data});\n                    this.props.updateUser(this.state.username);\n                    this.setState({valid: true})\n                }\n            }\n        );\n    }\n\n    render() {\n        if (this.state.user) {\n            this.setState({valid: false})\n            return <Redirect to={'/'} />\n        }\n        return ( \n            <div className = 'App-Body'>\n            <form onSubmit = {this.onSubmit}>\n                <input \n                    type = \"text\" \n                    name = \"Username\"\n                    placeholder = \"Username\"\n                    value = {this.state.username}\n                    onChange = {this.onChangeU}\n                    className = \"textfield\"\n\n                />\n                <br></br>\n                <input \n                    type = \"password\" \n                    name = \"Password\"\n                    placeholder = \"Password\"\n                    value = {this.state.password}\n                    onChange = {this.onChangeP}\n                    className = \"textfield\"\n\n                />\n                <br></br>\n                <input \n                    type = \"submit\" \n                    value = \"Login\" \n                    className = \"btn\"\n                />\n            </form>\n            <br></br>\n            <Link to=\"/SignUp\">Sign Up</Link>\n            </div> \n            \n        );\n    }\n}\n\nexport default Login\n","import React, { Component } from 'react'\nimport axios from 'axios' \nimport { Redirect, Link } from \"react-router-dom\";\n\nexport class SignUp extends Component {\n    \n    state = {\n        username: '',\n        password: '',\n        valid: false\n    }\n\n    onChangeU = (e) => this.setState({username: e.target.value});\n    onChangeP = (e) => this.setState({password: e.target.value});\n\n    onSubmit = (e) =>{\n        e.preventDefault();\n        this.checkUser();\n    }\n\n    checkUser = async () => {\n        if(this.state.username.length < 3) alert(\"Username too Short!\");\n        else if(this.state.password.length < 5) alert(\"Password too Short!\");\n        else{\n            await axios.get('http://localhost:5000/users/get/'+this.state.username)\n            .then(response => {\n                if(response.data != null) alert(\"Username Taken!\");\n                else this.addUser();\n            })\n            .catch((error) => {\n                console.log(error);\n            })\n        }\n    }\n    addUser = async () => {\n        const newUser = {\n            username : this.state.username,\n            password : this.state.password,\n            role: 'user'\n        }\n        \n        await axios.post('http://localhost:5000/users/add', newUser)\n          .then(response => {\n            this.setState({user: response.data },this.verifyUser)\n            console.log(this.state.user)\n          })\n          .catch((error) => {\n            console.log(error);\n          })\n          this.props.updateUser(this.state.username);\n          setTimeout(5000);\n          this.setState({valid: true})\n      };\n\n    render() {\n        if (this.state.valid) {\n            this.setState({valid: false})\n            return <Redirect to={'/'} />\n        }\n        return (  \n            <div className = 'App-Body'>\n            <form onSubmit = {this.onSubmit}>\n                <input \n                    type = \"text\" \n                    name = \"Username\"\n                    placeholder = \"Username\"\n                    value = {this.state.username}\n                    onChange = {this.onChangeU}\n                    className = \"textfield\"\n\n                />\n                <br></br>\n                <input \n                    type = \"password\" \n                    name = \"Password\"\n                    placeholder = \"Password\"\n                    value = {this.state.password}\n                    onChange = {this.onChangeP}\n                    className = \"textfield\"\n\n                />\n                <br></br>\n                <input \n                    type = \"submit\" \n                    value = \"Sign Up\" \n                    className = \"btn\"\n                />\n            </form>\n            <br></br>\n            <Link to=\"/Login\">Login</Link>\n            </div> \n        )\n    }\n}\n\nexport default SignUp\n","import React, { Component } from 'react'\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faHeart } from \"@fortawesome/free-solid-svg-icons\";\nimport axios from 'axios';\n\nexport class TweetCell extends Component {\n\n    likeTweet = async () => {\n        if (!this.props.user) {\n            alert(\"You must login to like tweets\");\n            return;\n        }\n\n        if (!this.props.liked) {\n            console.log(this.props.user + \" liked \" + this.props.id)\n            const like = {\n                username: this.props.user,\n                tweetID: this.props.id,\n            }\n            await axios.put('http://localhost:5000/users/like', like)\n            // .then(res => console.log(res.data));\n        } else {\n            console.log(this.props.user + \" unliked \" + this.props.id)\n            const like = {\n                username: this.props.user,\n                tweetID: this.props.id,\n            }\n            console.log(like)\n            await axios.put('http://localhost:5000/users/unlike', like)\n            // .then(res => console.log(res.data));\n        }\n\n        // this.props.updateUser(this.props.user);\n        this.props.updateTweets();\n        this.forceUpdate();\n    }\n\n    render() {\n        return (\n            <div className=\"tweet-cell\">\n                <p><b>{this.props.username}</b> {this.props.date.substring(0, 10)} </p>\n                <p>{this.props.message}</p>\n                {!this.props.liked ?\n                    <FontAwesomeIcon className=\"like-btn\" style={{ cursor: \"pointer\", fontSize: \"1rem\", marginRight: 10 }} icon={faHeart} onClick={this.likeTweet} />\n                    :\n                    <FontAwesomeIcon className=\"like-btn\" style={{ cursor: \"pointer\", fontSize: \"1rem\", marginRight: 10, color: \"rgb(224, 36, 94)\" }} icon={faHeart} onClick={this.likeTweet} />\n                }\n            </div>\n        )\n    }\n}\n\nexport default TweetCell\n","import React, { Component } from 'react'\nimport axios from 'axios'\nimport TweetCell from './TweetCell'\n\nexport class TweetList extends Component {\n\n    state = {\n        likedTweets: []\n    }\n\n    componentDidMount() {\n        this.getTweets();\n    }\n\n    getTweets = async () => {\n\n        if (!this.props.user) return;\n\n        // console.log('http://localhost:5000/users/get/'+this.props.user);\n        await axios.get('http://localhost:5000/users/get/' + this.props.user)\n            .then(res => {\n                this.setState({ likedTweets: res.data.likedTweets })\n            })\n        return true;\n    }\n\n    getLiked = (id) => {\n        if (this.state.likedTweets)\n            if (this.state.likedTweets.includes(id)) {\n                return true;\n            }\n        return false;\n    }\n\n    updateTweets = async () => {\n        this.props.updateUser(this.props.user)\n        this.props.updateTweets();\n        console.log(\"updating tweets\")\n        this.getTweets();\n    }\n\n    render() {\n\n        return this.props.tweets.slice(0).reverse().map((tweet) => (\n            <TweetCell\n                username={tweet.username}\n                message={tweet.message}\n                id={tweet._id}\n                date={tweet.updatedAt}\n                user={this.props.user}\n                liked={this.getLiked(tweet._id)}\n                updateUser={this.props.updateUser}\n                updateTweets={this.updateTweets}\n            />\n        ));\n\n    }\n\n}\n\nexport default TweetList","import React, { Component } from 'react'\nimport axios from 'axios';\n\nexport class CreateTweet extends Component {\n\n    state = {\n        tweet: '',\n    }\n\n    onChange = (e) => this.setState({ tweet: e.target.value });\n\n    onSubmit = async (e) => {\n        e.preventDefault();\n        if (this.props.user == null)\n            alert(\"You Must Log In\")\n        else {\n            console.log(this.state.tweet);\n            const newTweet = {\n                username: this.props.user,\n                message: this.state.tweet\n            }\n            await axios.post('http://localhost:5000/tweets/add', newTweet)\n                .then(res => console.log(res.data));\n\n            this.setState({ tweet: '' });\n            this.props.updateTweets();\n        }\n    }\n\n    render() {\n        return (\n            <form id=\"tweet-box\" className=\"tweet-box\" onSubmit={this.onSubmit}>\n                <textarea\n                    type=\"textarea\"\n                    name=\"tweet\"\n                    autoComplete=\"off\"\n                    placeholder=\"What's Happening?\"\n                    value={this.state.tweet}\n                    onChange={this.onChange}\n                    form=\"tweet-box\"\n                    className=\"textArea\"\n                >\n                </textarea>\n                <input\n                    type=\"submit\"\n                    value=\"Tweet\"\n                    className=\"btn\"\n                />\n            </form>\n        )\n    }\n}\n\n\nexport default CreateTweet\n","import React, { Component } from 'react'\nimport TweetList from './TweetList';\nimport CreateTweet from './CreateTweet';\nimport axios from 'axios';\n\nexport class MainPage extends Component {\n\n    state = {\n        tweets: []\n    };\n\n    getTweets = async () => {\n        console.log('Getting Tweets');\n        await axios.get('http://localhost:5000/tweets/')\n            .then(response => {\n                this.setState({ tweets: response.data })\n            })\n            .catch((error) => {\n                console.log(error);\n            })\n    };\n\n    componentDidMount() {\n        this.getTweets();\n    }\n\n    render() {\n        return (\n            <div className=\"App-Body\">\n                <div className=\"Tweet-List\">\n                    <CreateTweet user={this.props.user} updateTweets={this.getTweets} />\n                    {this.state.tweets.length === 0 ? (\n                        <h1>Loading Tweets...</h1>\n                    ) : (\n                        <TweetList\n                            tweets={this.state.tweets}\n                            user={this.props.user}\n                            updateTweets={this.getTweets}\n                            updateUser={this.props.updateUser}\n                        />\n                    )}\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default MainPage\n","import React, { Component } from 'react'\nimport TweetList from './TweetList';\nimport axios from 'axios';\n\nexport class Profile extends Component {\n    state = {\n        tweets: [],\n        numLikes: 0\n    };\n\n    getTweets = async () => {\n        await axios.get('http://localhost:5000/tweets/get/' + this.props.user)\n            .then(response => {\n                this.setState({ tweets: response.data })\n            })\n            .catch((error) => {\n                console.log(error);\n            })\n    };\n\n    getUser = async () => {\n        await axios.get('http://localhost:5000/users/get/' + this.props.user)\n            .then(response => {\n                this.setState({ numLikes: response.data.likedTweets.length })\n            })\n            .catch((error) => {\n                console.log(error);\n            })\n    };\n\n    componentDidMount() {\n        this.getTweets();\n        this.getUser();\n    }\n\n    refresh = () => {\n        this.getTweets();\n        this.getTweets();\n    }\n\n    logout = () => {\n        console.log(\"logging out\");\n        axios.get('http://localhost:5000/users/logout');\n        this.props.updateUser(null);\n    }\n\n    render() {\n        return (\n            <div className=\"App-Body\">\n                {this.props.user ? (\n                    <div>\n                        <div className=\"Tweet-List\">\n                            <div className=\"bio\">\n                                <h1>@{this.props.user}</h1>\n                                <h4 style={{ opacity: '0.7' }}> Tweets: {this.state.tweets.length} </h4>\n                                <h4 style={{ opacity: '0.7' }}> Likes: {this.state.numLikes} </h4>\n                                <button className=\"btn\" style={{ margin: 0 }} onClick={this.logout}>Sign Out</button>\n                            </div>\n                            <TweetList\n                                tweets={this.state.tweets}\n                                user={this.props.user}\n                                updateTweets={this.getTweets}\n                                updateUser={this.props.updateUser}\n                            />\n                        </div>\n                    </div>\n                ) : (\n                    <div>Logged Out</div>\n                )}\n            </div>\n        )\n    }\n}\n\nexport default Profile\n","import React, { Component } from 'react'\nimport TweetList from './TweetList';\nimport axios from 'axios';\n\nexport class Liked extends Component {\n\n\n    state = {\n        tweet_ID_List: [],\n        tweets: []\n    };\n\n    getTweetIDs = () => {\n        axios.get('http://localhost:5000/users/get/' + this.props.user)\n            .then(response => {\n                this.setState({ tweet_ID_List: response.data.likedTweets }, this.getTweets)\n            })\n            .catch((error) => {\n                console.log(error);\n            })\n    };\n\n    getTweets = () => {\n        this.state.tweet_ID_List.forEach(tweet => {\n            console.log(\"Searching For: \" + tweet)\n            axios.get('http://localhost:5000/tweets/' + tweet)\n                .then(response => {\n                    this.setState({ tweets: [...this.state.tweets, response.data] })\n                })\n                .catch((error) => {\n                    console.log(error);\n                    return\n                })\n        });\n    }\n\n    componentDidMount() {\n        this.getTweetIDs();\n    }\n\n    render() {\n        return (\n\n            <div className=\"App-Body\">\n                {!this.props.user ?\n                    <div> You haven’t liked any Tweets yet</div>\n                    :\n                    <div className=\"Tweet-List\">\n                        <TweetList\n                            tweets={this.state.tweets}\n                            user={this.props.user}\n                            updateTweets={this.getTweetIDs}\n                            updateUser={this.props.updateUser}\n                        />\n                    </div>}\n            </div>\n        )\n    }\n}\n\nexport default Liked\n","import React, { Component } from 'react'\n\nexport class Following extends Component {\n    state = {\n        tweetsList:[],\n        tweets:[]\n    };\n    render() {\n        return (\n            this.state.tweets.length === 0 ? <div className=\"App-Body\"> You aren't Following anyone yet</div> :\n            <div className=\"App-Body\">\n                Following Page\n            </div>\n        )\n    }\n}\n\nexport default Following\n","import React, { Component } from 'react'\n\nexport class Search extends Component {\n    render() {\n        return (\n            <div className=\"App-Body\">\n                Search Page\n            </div>\n        )\n    }\n}\n\nexport default Search\n","import React from 'react'\nimport CreateTweet from './CreateTweet';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTimes } from \"@fortawesome/free-solid-svg-icons\";\n\nconst MODAL_STYLES = {\n  position: 'fixed',\n  top: '50%',\n  left: '50%',\n  transform: 'translate(-50%, -50%)',\n  backgroundColor: '#15202b',\n  padding: '20px',\n  zIndex: 1000,\n  borderRadius: 20\n}\n\nconst OVERLAY_STYLES = {\n  position: 'fixed',\n  top: 0,\n  left: 0,\n  right: 0,\n  bottom: 0,\n  backgroundColor: 'rgba(255, 255, 255, .1)',\n  zIndex: 1000\n}\n\nexport default function Modal({ open, onClose, user }) {\n  if (!open) return null\n\n  const getTweets = () => {\n    onClose()\n  }\n\n  return (\n    <>\n      <div style={OVERLAY_STYLES} />\n      <div style={MODAL_STYLES}>\n        <div className=\"close-btn\">\n          <FontAwesomeIcon style = {{color: '#1ea1f2'}} icon={faTimes} onClick={onClose} />\n        </div>\n        <div className=\"Tweet-List\">\n          <CreateTweet user={user} updateTweets={getTweets} />\n        </div>\n      </div>\n    </>\n  )\n}","import React, { Component } from 'react'\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\n\nimport './App.css';\nimport Navbar from './components/Navbar';\nimport Login from \"./components/Login\";\nimport SignUp from './components/SignUp';\nimport MainPage from './components/MainPage';\nimport Profile from './components/Profile';\nimport Liked from './components/Liked';\nimport Following from './components/Following';\nimport Search from './components/Search';\nimport Modal from './components/Modal';\n\nclass App extends Component {\n\n  state = {\n    user: null,\n    open: false,\n  };\n\n  updateUser = (uid) => {\n    this.setState({ user: uid });\n    console.log(\"Logged in as: \" + uid);\n  }\n\n  toggleOpen = () => {\n    this.setState({ open: true })\n  }\n\n  render() {\n    return (\n      <Router>\n        <div className=\"App\">\n          <br></br>\n          <div className=\"App-Body\" style={{ fontSize: \"1.75em\", fontWeight: \"bold\" }}> TwitterClone </div>\n\n            <Modal\n              open={this.state.open}\n              onClose={ () => {this.setState({ open: false})}}\n              user={this.state.user}\n            >\n              Popup\n            </Modal>\n           \n          <div className=\"container\">\n\n            <Navbar toggleOpen={this.toggleOpen} user={this.state.user} />\n\n\n            <Route path=\"/\" exact\n              render={(props) => (<MainPage user={this.state.user} updateUser={this.updateUser} />\n              )} />\n            <Route path=\"/profile\" exact\n              render={(props) => (<Profile user={this.state.user} updateUser={this.updateUser} />\n              )} />\n            <Route path=\"/liked\" exact\n              render={(props) => (<Liked user={this.state.user} updateUser={this.updateUser} />\n              )} />\n            <Route path=\"/following\" exact\n              render={(props) => (<Following user={this.state.user} />\n              )} />\n            <Route path=\"/search\" exact\n              render={(props) => (<Search user={this.state.user} />\n              )} />\n            <Route path=\"/login\"\n              render={(props) => (<Login updateUser={this.updateUser} />)}\n            />\n            <Route path='/SignUp'\n              render={(props) => (<SignUp updateUser={this.updateUser} />)}\n            />\n            {/* <Route path='/Modal'\n              render={(props) => (<Modal updateUser={this.updateUser} />)}\n            /> */}\n          </div>\n\n        </div>\n      </Router>\n    );\n  }\n\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}